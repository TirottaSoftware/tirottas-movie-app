{"version":3,"sources":["Components/Movie.js","Components/Banner.js","movies.js","App.js","serviceWorker.js","index.js"],"names":["Movie","props","Modal","setAppElement","useState","showModal","setShowModal","handleImageClick","getTrailerKey","id","fetch","then","res","json","data","fetchTrailer","result","ytLink","videos","results","key","window","open","className","onClick","src","movie","poster_path","alt","isOpen","closeTimeoutMS","style","background","backdrop_path","backgroundSize","height","title","vote_average","overview","slice","Banner","bannerMovie","setBannerMovie","randomNr","Math","floor","random","useEffect","movies","getMovieTrailer","defaultUrl","popular","top","upcoming","App","api","moviesRes","apiTop","apiPopular","apiUpcoming","topMovies","setTopMovies","upcomingMovies","setUpcomingMovies","popularMovies","setPopularMovies","setMovies","searchTerm","setSearchTerm","previousSearch","setPreviousSearch","onSubmit","e","preventDefault","length","appDiv","document","querySelector","banner","movieRow","innerHTML","classList","remove","add","type","placeholder","value","onChange","target","map","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7e132e0.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-modal';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport './Movie.css';\r\n\r\n\r\n\r\n\r\nconst Movie = (props) =>{\r\n    Modal.setAppElement('body')\r\n    const img_api = \r\n    \"https://image.tmdb.org/t/p/w500/\";\r\n    const backdrop_api = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    const [trailerKey, setTrailerKey] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleImageClick = () =>{\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    // const getMovieTrailerAsync = () =>{\r\n    //     const key = getTrailerKeyAsync();\r\n    // }\r\n\r\n    function fetchTrailer(id){\r\n        const movieLink = \"http://api.themoviedb.org/3/movie/\" + id + \"?api_key=a8ddc54a46d9633a6500259806fbe193&append_to_response=videos\";\r\n\r\n        return fetch(movieLink).then(res => res.json()).then((data) => {return data;})\r\n    }\r\n\r\n     function getTrailerKey(id){\r\n\r\n        fetchTrailer(id).then((result) => {\r\n            //console.log(result.videos.results[0].key)\r\n            const ytLink = \"https://youtube.com/watch?v=\" + result.videos.results[0].key;\r\n            \r\n            window.open(ytLink);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className = \"movie\">\r\n\r\n            <img onClick = {handleImageClick} className = \"movie-img\" src = {img_api + props.movie.poster_path} alt = \"Image Not Found\"/>           \r\n            \r\n            <Modal isOpen = {showModal} closeTimeoutMS = {500} >\r\n                <div className = \"popup-banner\" style = {{\r\n                    background: \"linear-gradient(to left top, transparent 30%, black 100%),url(\" + backdrop_api + props.movie.backdrop_path + \")\",\r\n                    backgroundSize: \"cover\",\r\n                    height: \"100%\",\r\n                    }}>\r\n                        <div className = \"popup-header\">\r\n                <h2 id = \"popup-title\">{props.movie.title}<p id = \"rating\">{props.movie.vote_average} / 10</p></h2>\r\n                <button id = \"btn-banner-close\" onClick = {handleImageClick}>\r\n                    <CancelIcon />\r\n                </button>\r\n                </div>\r\n                <p className = \"popup-description\">{props.movie.overview&& props.movie.overview.slice(0,200) + \"...\"}</p>\r\n                \r\n                <button onClick = {() => getTrailerKey(props.movie.id)} id = \"btn-trailer\">Trailer</button>\r\n                \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;","import React, {useState, useEffect} from 'react'\r\nimport './Movie.css'\r\n\r\nconst Banner = (props) =>{\r\n    const img_api = \r\n    \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    const [bannerMovie, setBannerMovie] = useState({})\r\n    const randomNr = Math.floor(Math.random() * 18.69)\r\n\r\n    useEffect(() => {\r\n        setBannerMovie(props.movies[randomNr]);\r\n    }, [])\r\n\r\n    const getBannerBackground = () =>{\r\n        const bannerBackground = img_api + bannerMovie?.backdrop_path;\r\n        return bannerBackground;\r\n    }\r\n\r\n    function fetchTrailer(id){\r\n        const movieLink = \"http://api.themoviedb.org/3/movie/\" + id + \"?api_key=a8ddc54a46d9633a6500259806fbe193&append_to_response=videos\";\r\n\r\n        return fetch(movieLink).then(res => res.json()).then((data) => {return data;})\r\n    }\r\n\r\n     function getMovieTrailer(id){\r\n\r\n        fetchTrailer(id).then((result) => {\r\n            //console.log(result.videos.results[0].key)\r\n            const ytLink = \"https://youtube.com/watch?v=\" + result.videos.results[0].key;\r\n            \r\n            window.open(ytLink);\r\n        })\r\n    }\r\n\r\n   return(\r\n        <header className = \"banner\"\r\n        style = {{\r\n            background: \"linear-gradient(to left, transparent 0%, black 80%),  url(\"+getBannerBackground() +\") center center/100vw 100vh no-repeat \",\r\n        }}>\r\n            <div className = \"banner-info\">\r\n                <h2>{bannerMovie.title}</h2>\r\n                {/* <button id = \"btn-imdb\">IMDb</button> */}\r\n                <p>{bannerMovie.overview&& bannerMovie.overview.slice(0,200) + \"...\"}</p>\r\n                <button onClick = {() => getMovieTrailer(bannerMovie.id)} id = \"btn-trailer\">Watch Trailer</button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;","\r\nconst movies = {\r\n    defaultUrl: \"https://api.themoviedb.org/3/discover/movie?api_key=a8ddc54a46d9633a6500259806fbe193&append_to_response=videos\",\r\n    popular: \"https://api.themoviedb.org/3/movie/popular?api_key=a8ddc54a46d9633a6500259806fbe193&language=en-US&page=1&append_to_response=videos\",\r\n    top:\"https://api.themoviedb.org/3/movie/top_rated?api_key=a8ddc54a46d9633a6500259806fbe193&language=en-US&page=1&append_to_response=videos\",\r\n    upcoming: \"https://api.themoviedb.org/3/movie/upcoming?api_key=a8ddc54a46d9633a6500259806fbe193&language=en-US&page=1&append_to_response=videos\",\r\n}\r\n\r\nexport default movies","import React, { useState, useEffect} from 'react';\nimport Movie from './Components/Movie';\nimport Banner from './Components/Banner';\nimport moviesRes from './movies.js';\nimport './App.css';\n\nfunction App() {\n\n  const searchApi = \"https://api.themoviedb.org/3/search/movie?api_key=a8ddc54a46d9633a6500259806fbe193&language=en-US&query=\";\n\n  const api = moviesRes.defaultUrl;\n  const apiTop = moviesRes.top;\n  const apiPopular = moviesRes.popular;\n  const apiUpcoming = moviesRes.upcoming + \"&append_to_response=videos\";\n\n  const [topMovies, setTopMovies] = useState([]);\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [previousSearch, setPreviousSearch] = useState(\"\");\n  const moviesRef = [...movies];\n\n  useEffect(() => {\n       fetch(api)\n      .then(res => res.json())\n      .then((data) => {\n      setMovies(data.results);\n      return data;\n    });\n\n     fetch(apiPopular)\n    .then(res => res.json())\n    .then(data => {\n      setPopularMovies(data.results);\n      return data;\n    })\n    fetch(apiTop)\n    .then(res => res.json())\n    .then(data => {\n      setTopMovies(data.results);\n      return data;\n    })\n\n    fetch(apiUpcoming)\n    .then(res => res.json())\n    .then((data) => {\n    setUpcomingMovies(data.results);\n    return data;\n  });\n\n  }, [])\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    setPreviousSearch(searchTerm);\n\n    if(searchTerm.length === 0){\n      const appDiv = document.querySelector(\".tobe-hidden\");\n      const banner = document.querySelector(\".banner\");\n      const movieRow = document.querySelector(\"#first-row\");\n      const rowTitle = document.querySelector(\".first-row-title\");\n\n      rowTitle.innerHTML = \"popular\";\n      movieRow.classList.remove(\"wrap\");\n       banner.classList.remove(\"hidden\");\n      appDiv.classList.remove(\"hidden\");\n\n      fetch(api)\n      .then(res => res.json())\n      .then((data) => {\n      setMovies(data.results);\n      return data;\n      });\n    \n      return;\n    }\n    else if(searchTerm === previousSearch){\n      return;\n    }\n\n    let query = searchApi + searchTerm;\n\n    fetch(query).then(res => res.json()).then((data) => {\n      const appDiv = document.querySelector(\".tobe-hidden\");\n      const banner = document.querySelector(\".banner\");\n      const movieRow = document.querySelector(\"#first-row\");\n      const rowTitle = document.querySelector(\".first-row-title\");\n\n      rowTitle.innerHTML = \"Showing results for: \" + searchTerm;\n      movieRow.classList.add(\"wrap\");\n       banner.classList.add(\"hidden\");\n      appDiv.classList.add(\"hidden\")\n      \n      setMovies(data.results);\n    })\n  }\n\n  const handleInputChange = (e) =>{\n    e.preventDefault();\n    setSearchTerm(e.target.value);\n  }\n  \n  return (\n    <div className = \"App\">\n      <form onSubmit = {handleSubmit} className = \"navbar\">\n        <h3>Tirotta's Movie App</h3>\n        <input id = \"searchbar\" type = \"search\" placeholder = \"Search...\" value = {searchTerm} onChange = {handleInputChange}/>\n        <input id = \"btn-search\" type = \"submit\" value = \"Search\"/>\n      </form>\n      {popularMovies.length > 0 && <Banner  movies = {popularMovies} />}\n      <h2 className = \"first-row-title\" id = \"row-title\" >Popular</h2>\n      <div className=\"movie-row\" id = \"first-row\" >\n        {movies.length > 0 && movies.map(movie => movie.poster_path? <Movie key = {movie.id} movie = {movie}/> : null)}\n      </div>\n        <div className = \"tobe-hidden\">\n          <h2 id = \"row-title\">top rated</h2>\n        <div className=\"movie-row\">\n        {movies.length > 0 && topMovies.map(movie => <Movie key = {movie.id} movie = {movie}/>)}\n        </div>\n          <h2 id = \"row-title\">upcoming</h2>\n       <div className=\"movie-row\">\n        {movies.length > 0 && upcomingMovies.map(movie => <Movie key = {movie.id} movie = {movie}/>)}\n        </div>\n      </div>\n    </div>\n  );  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}